{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar dummyUser = {\n  nickname: \"이정걸\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {}\n};\nexport var initialState = {\n  isLoggedIn: false,\n  user: null\n}; //액션의 이름\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var signUpAction = function signUpAction(data) {\n  // 동적 데이터 처리를 위해 함수로 만든다\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutAction = {\n  type: LOG_OUT_REQUEST\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loginData: action.data,\n          isLoading: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","initialState","isLoggedIn","user","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAction","data","type","SIGN_UP","signUpSuccess","loginAction","logoutAction","reducer","state","action","loginData","isLoading"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAlB;AAQA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAClC;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEC,OADD;AAELF,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CANM;AAQP,OAAO,IAAMG,aAAa,GAAG;AAC3BF,EAAAA,IAAI,EAAEV;AADqB,CAAtB;AAIP,OAAO,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAAAJ,IAAI;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAER,cAD0B;AAEhCO,IAAAA,IAAI,EAAJA;AAFgC,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAMK,YAAY,GAAG;AAC1BJ,EAAAA,IAAI,EAAEL;AADoB,CAArB;;AAIP,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBpB,YAAyB;AAAA,MAAXqB,MAAW;;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKR,cAAL;AAAqB;AACnB,iCACKc,KADL;AAEEE,UAAAA,SAAS,EAAED,MAAM,CAACR,IAFpB;AAGEU,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKhB,cAAL;AAAqB;AACnB,iCACKa,KADL;AAEEnB,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAER,SAHR;AAIE6B,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKd,eAAL;AAAsB;AACpB,iCACKW,KADL;AAEEnB,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKC,eAAL;AAAsB;AACpB,iCACKiB,KADL;AAEErB,UAAAA,UAAU,EAAEsB,MAAM,CAACR;AAFrB;AAID;;AACD;AAAS;AACP,iCACKO,KADL;AAGD;AAjCH;AAmCD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n  nickname: \"이정걸\",\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n  signUpData: {}\r\n};\r\n\r\nexport const initialState = {\r\n  isLoggedIn: false,\r\n  user: null\r\n};\r\n\r\n//액션의 이름\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const signUpAction = data => {\r\n  // 동적 데이터 처리를 위해 함수로 만든다\r\n  return {\r\n    type: SIGN_UP,\r\n    data: data\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS\r\n};\r\n\r\nexport const loginAction = data => ({\r\n    type: LOG_IN_REQUEST,\r\n    data\r\n});\r\n\r\nexport const logoutAction = {\r\n  type: LOG_OUT_REQUEST\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loginData: action.data,\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}