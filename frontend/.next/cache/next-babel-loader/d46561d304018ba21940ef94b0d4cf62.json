{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\react_nodebird\\\\nodebird_ljg\\\\frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport PropTypes from \"prop-types\";\nimport withRedux from \"next-redux-wrapper\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport AppLayout from \"../components/AppLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst NodeBird = ({\n  Component,\n  store\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.3/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired\n};\n\nconst configureStore = (initialState, options) => {\n  //store를 props로 넘겨주기 위해 고차컴포넌트를 사용해서 확장한다\n  //이 형식은 대부분 이렇게 쓰이므로 외워서 사용하는게 좋을 듯 싶다\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware]; // 다른 미들웨어를 추가하더라도 이 부분만 바뀐다\n\n  const enhancer = process.env.NODE_ENV === \"production\" ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer); //여기에다가 store 커스터마이징\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["D:\\git\\react_nodebird\\nodebird_ljg\\frontend\\pages\\_app.js"],"names":["React","Head","PropTypes","withRedux","Provider","createStore","compose","applyMiddleware","createSagaMiddleware","AppLayout","reducer","rootSaga","NodeBird","Component","store","propTypes","elementType","isRequired","object","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACzC,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,6DAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAcD,CAfD;;AAiBAF,QAAQ,CAACG,SAAT,GAAqB;AACnBF,EAAAA,SAAS,EAAEX,SAAS,CAACc,WAAV,CAAsBC,UADd;AAEnBH,EAAAA,KAAK,EAAEZ,SAAS,CAACgB,MAAV,CAAiBD;AAFL,CAArB;;AAKA,MAAME,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD;AACA;AACA,QAAMC,cAAc,GAAGd,oBAAoB,EAA3C;AACA,QAAMe,WAAW,GAAG,CAACD,cAAD,CAApB,CAJgD,CAIV;;AACtC,QAAME,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIrB,OAAO,CAACC,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADX,GAEIjB,OAAO,CACLC,eAAe,CAAC,GAAGgB,WAAJ,CADV,EAEL,CAACF,OAAO,CAACO,QAAT,IACEC,MAAM,CAACC,4BAAP,KAAwC,WAD1C,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGIC,CAAC,IAAIA,CALJ,CAHb;AAUA,QAAMjB,KAAK,GAAGT,WAAW,CAACK,OAAD,EAAUU,YAAV,EAAwBI,QAAxB,CAAzB,CAfgD,CAgBhD;;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBrB,QAAnB;AACA,SAAOG,KAAP;AACD,CAnBD;;AAqBA,eAAeX,SAAS,CAACgB,cAAD,CAAT,CAA0BP,QAA1B,CAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport PropTypes from \"prop-types\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <title>NodeBird</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.3/antd.css\"\r\n        />\r\n      </Head>\r\n      <AppLayout>\r\n        <Component />\r\n      </AppLayout>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  store: PropTypes.object.isRequired,\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n  //store를 props로 넘겨주기 위해 고차컴포넌트를 사용해서 확장한다\r\n  //이 형식은 대부분 이렇게 쓰이므로 외워서 사용하는게 좋을 듯 싶다\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware]; // 다른 미들웨어를 추가하더라도 이 부분만 바뀐다\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n          applyMiddleware(...middlewares),\r\n          !options.isServer &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n        );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  //여기에다가 store 커스터마이징\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(NodeBird);\r\n"]},"metadata":{},"sourceType":"module"}