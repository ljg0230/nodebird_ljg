{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uC774\\uC815\\uAC78\\\\web\\\\react_nodebird\\\\frontend\\\\components\\\\UserProfile.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, Avatar, Button } from \"antd\";\nimport { logoutRequestAction } from \"../reducers/user\";\n\nvar UserProfile = function UserProfile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n  var onLogout = useCallback(function () {\n    // useCallback을 하는 이유는 자식컴포넌트에 props로 전달하기 때문\n    dispatch(logoutRequestAction);\n  }, []);\n  return __jsx(Card, {\n    actions: [\n      /*         <div key=\"twit\">\r\n                짹짹!\r\n                <br />\r\n                {me.Posts.length}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {me.Followings.length}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {me.Followers.length}\r\n              </div> */\n    ],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, me.nickname[0]),\n    title: me.nickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(Button, {\n    style: {\n      margin: '20px -10px 0'\n    },\n    onClick: onLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\components\\UserProfile.js"],"names":["React","useCallback","useSelector","useDispatch","Card","Avatar","Button","logoutRequestAction","UserProfile","state","user","me","dispatch","onLogout","nickname","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,qBACTN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADF;AAAA,MAChBC,EADgB,gBAChBA,EADgB;;AAExB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAMU,QAAQ,GAAGZ,WAAW,CAAC,YAAM;AACjC;AACAW,IAAAA,QAAQ,CAACL,mBAAD,CAAR;AACD,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,SACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE;AACf;;;;;;;;;;;;;;;AADe,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASI,EAAE,CAACG,QAAH,CAAY,CAAZ,CAAT,CADV;AAEE,IAAA,KAAK,EAAEH,EAAE,CAACG,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAuBE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf;AAA0C,IAAA,OAAO,EAAEF,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAvBF,CADF;AA2BD,CAnCD;;AAqCA,eAAeL,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, Avatar, Button } from \"antd\";\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\n\r\nconst UserProfile = () => {\r\n  const { me } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => {\r\n    // useCallback을 하는 이유는 자식컴포넌트에 props로 전달하기 때문\r\n    dispatch(logoutRequestAction);\r\n  }, []);\r\n  return (\r\n    <Card\r\n      actions={[\r\n/*         <div key=\"twit\">\r\n          짹짹!\r\n          <br />\r\n          {me.Posts.length}\r\n        </div>,\r\n        <div key=\"following\">\r\n          팔로잉\r\n          <br />\r\n          {me.Followings.length}\r\n        </div>,\r\n        <div key=\"follower\">\r\n          팔로워\r\n          <br />\r\n          {me.Followers.length}\r\n        </div> */\r\n      ]}\r\n    >\r\n      <Card.Meta\r\n        avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n        title={me.nickname}\r\n      />\r\n      <Button style={{ margin: '20px -10px 0'}} onClick={onLogout}>로그아웃</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}