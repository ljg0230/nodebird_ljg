{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from \"next/link\";\nimport PropTypes from 'prop-types';\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return __jsx(\"div\", null, postData.split(/(#[^\\s]+)/g).map(function (v) {\n    // 해시태그의 링크넣기 -> a tag가 아닌 next의 Link를 써야 spa 가 유지가 된다\n    if (v.match(/#[^\\s]+/)) {\n      return __jsx(Link, {\n        href: {\n          pathname: \"/hashtag\",\n          query: {\n            tag: v.slice(1)\n          }\n        },\n        as: \"/hashtag/\".concat(v.slice(1)),\n        key: v\n      }, __jsx(\"a\", null, v));\n    }\n\n    return v;\n  }));\n};\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\components\\PostCardContent.js"],"names":["React","Link","PropTypes","PostCardContent","postData","split","map","v","match","pathname","query","tag","slice","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxC,SACE,mBACGA,QAAQ,CAACC,KAAT,CAAe,YAAf,EAA6BC,GAA7B,CAAiC,UAAAC,CAAC,EAAI;AACrC;AACA,QAAIA,CAAC,CAACC,KAAF,CAAQ,SAAR,CAAJ,EAAwB;AACtB,aACE,MAAC,IAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,QAAQ,EAAE,UADN;AAEJC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,GAAG,EAAEJ,CAAC,CAACK,KAAF,CAAQ,CAAR;AAAP;AAFH,SADR;AAKE,QAAA,EAAE,qBAAcL,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAd,CALJ;AAME,QAAA,GAAG,EAAEL;AANP,SAQE,iBAAIA,CAAJ,CARF,CADF;AAYD;;AACD,WAAOA,CAAP;AACD,GAjBA,CADH,CADF;AAsBD,CAvBD;;AAyBAJ,eAAe,CAACU,SAAhB,GAA4B;AACxBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,MAAV,CAAiBC;AADH,CAA5B;AAIA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\r\nimport Link from \"next/link\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostCardContent = ({ postData }) => {\r\n  return (\r\n    <div>\r\n      {postData.split(/(#[^\\s]+)/g).map(v => {\r\n        // 해시태그의 링크넣기 -> a tag가 아닌 next의 Link를 써야 spa 가 유지가 된다\r\n        if (v.match(/#[^\\s]+/)) {\r\n          return (\r\n            <Link\r\n              href={{\r\n                pathname: \"/hashtag\",\r\n                query: { tag: v.slice(1) }\r\n              }}\r\n              as={`/hashtag/${v.slice(1)}`}\r\n              key={v}\r\n            >\r\n              <a>{v}</a>\r\n            </Link>\r\n          );\r\n        }\r\n        return v;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCardContent.propTypes = {\r\n    postData: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}