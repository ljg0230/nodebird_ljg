{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from \"antd\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    if (postAdded) {\n      setText(\"\");\n    }\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    //props로 들어가면 callback!\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: \"20px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText\n  }), __jsx(\"div\", null, __jsx(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true\n  }), __jsx(Button, null, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    loading: isAddingPost,\n    htmlType: \"submit\"\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map(function (v) {\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3000/\".concat(v),\n      style: {\n        width: \"200px\"\n      },\n      alt: v\n    }), __jsx(\"div\", null, __jsx(Button, null, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\components\\PostForm.js"],"names":["React","useState","useCallback","useEffect","useSelector","useDispatch","Form","Input","Button","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeText","target","value","margin","map","v","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADqB,kBAEGJ,QAAQ,CAAC,EAAD,CAFX;AAAA,MAEdW,IAFc;AAAA,MAERC,OAFQ;;AAAA,qBAG2BT,WAAW,CACzD,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GADoD,CAHtC;AAAA,MAGbC,UAHa,gBAGbA,UAHa;AAAA,MAGDC,YAHC,gBAGDA,YAHC;AAAA,MAGaC,SAHb,gBAGaA,SAHb;;AAOrBf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,SAAJ,EAAe;AACbL,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACK,SAAD,CAJM,CAAT;AAMA,MAAMC,YAAY,GAAGjB,WAAW,CAAC,UAAAkB,CAAC,EAAI;AACpC;AACAA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACT,IAAD,IAAS,CAACA,IAAI,CAACU,IAAL,EAAd,EAA2B;AACzB,aAAOC,KAAK,CAAC,aAAD,CAAZ;AACD;;AACDZ,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEf,gBADC;AAEPgB,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAEd;AADL;AAFC,KAAD,CAAR;AAMD,GAZ+B,EAY7B,CAACA,IAAD,CAZ6B,CAAhC;AAcA,MAAMe,YAAY,GAAGzB,WAAW,CAAC,UAAAkB,CAAC,EAAI;AACpCP,IAAAA,OAAO,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAP;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAC,qBAFV;AAGE,IAAA,QAAQ,EAAEX;AAHZ,KAKE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,SAAS,EAAE,GADb;AAEE,IAAA,WAAW,EAAC,qDAFd;AAGE,IAAA,KAAK,EAAEP,IAHT;AAIE,IAAA,QAAQ,EAAEe;AAJZ,IALF,EAWE,mBACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM;AAAlC,IADF,EAEE,MAAC,MAAD,gDAFF,EAGE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAFT;AAGE,IAAA,OAAO,EAAEV,YAHX;AAIE,IAAA,QAAQ,EAAC;AAJX,oBAHF,CAXF,EAuBE,mBACGD,UAAU,CAACe,GAAX,CAAe,UAAAC,CAAC,EAAI;AACnB;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAApB,OACE;AACE,MAAA,GAAG,kCAA2BD,CAA3B,CADL;AAEE,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,GAAG,EAAEF;AAHP,MADF,EAME,mBACE,MAAC,MAAD,uBADF,CANF;AAUD,GAXA,CADH,CAvBF,CADF;AAwCD,CAvED;;AAyEA,eAAetB,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState(\"\");\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\r\n    state => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (postAdded) {\r\n      setText(\"\");\r\n    }\r\n  }, [postAdded]);\r\n\r\n  const onSubmitForm = useCallback(e => {\r\n    //props로 들어가면 callback!\r\n    e.preventDefault();\r\n    if (!text || !text.trim()) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        content: text,\r\n      }\r\n    });\r\n  }, [text]);\r\n\r\n  const onChangeText = useCallback(e => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"20px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 일이 있었나요?\"\r\n        value={text}\r\n        onChange={onChangeText}\r\n      />\r\n      <div>\r\n        <Input type=\"file\" multiple hidden />\r\n        <Button>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: \"right\" }}\r\n          loading={isAddingPost}\r\n          htmlType=\"submit\"\r\n        >\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map(v => {\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img\r\n              src={`http://localhost:3000/${v}`}\r\n              style={{ width: \"200px\" }}\r\n              alt={v}\r\n            />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>;\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}