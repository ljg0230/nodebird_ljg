{"ast":null,"code":"import { all, fork, put, delay, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from \"../reducers/post\";\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\sagas\\post.js"],"names":["all","fork","put","delay","takeLatest","takeEvery","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","type","e","error","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,SAA5C,QAA6D,oBAA7D;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;;AAEA,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOI,CAAP,EAAU;AACR,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAEF,gBADA;AAENI,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMT,UAAU,CAACE,gBAAD,EAAmBG,OAAnB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import { all, fork, put, delay, takeLatest, takeEvery } from \"redux-saga/effects\";\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from \"../reducers/post\";\r\n\r\nfunction* addPost() {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}