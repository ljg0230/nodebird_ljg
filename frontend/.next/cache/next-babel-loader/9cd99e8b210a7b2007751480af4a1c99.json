{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUpRequestAction } from \"../reducers/user\";\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\n\nvar TextInput = function TextInput(_ref) {\n  var value = _ref.value;\n  return __jsx(\"div\", null, value);\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string\n};\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  // 커스텀 hook으로 중복되는 내용을 줄임\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nvar Signup = function Signup() {\n  var _useState2 = useState(\"\"),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var _useState5 = useState(false),\n      termError = _useState5[0],\n      setTermError = _useState5[1];\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(\"\"),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me) {\n      alert('로그인 성공. 메인페이지로 이동합니다.');\n      Router.push('/'); //내 id값이 들어오면(로그인 시) 메인페이지로 이동한다\n    }\n  }, [me && me.id]); //비교의 용이함을 위해 me.id(일반값)를 씀, js는 항상 undefined 일 수 있으므로 && (가드)를 해준다\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch(signUpRequestAction({\n      userId: id,\n      password: password,\n      nickname: nick\n    }));\n  }, [id, nick, password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm\n  }, \"\\uC5F4\\uC2EC\\uD788 \\uD560 \\uAC70\\uC57C?\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    loading: isSigningUp,\n    htmlType: \"submit\"\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\pages\\signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","useDispatch","useSelector","signUpRequestAction","Router","PropTypes","TextInput","value","propTypes","string","useInput","initValue","setter","handler","e","target","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","id","onChangeId","nick","onChangeNick","password","onChangePassword","dispatch","state","user","isSigningUp","me","alert","push","onSubmit","preventDefault","userId","nickname","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Checkbox, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpRequestAction } from \"../reducers/user\";\r\nimport Router from 'next/router';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextInput = ({ value }) => {\r\n  return (\r\n    <div>{value}</div>\r\n  )\r\n};\r\n\r\nTextInput.propTypes = {\r\n  value: PropTypes.string,\r\n}\r\n\r\nexport const useInput = (initValue = null) => {\r\n  // 커스텀 hook으로 중복되는 내용을 줄임\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback(e => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [term, setTerm] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  const [id, onChangeId] = useInput(\"\");\r\n  const [nick, onChangeNick] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    if(me) {\r\n      alert('로그인 성공. 메인페이지로 이동합니다.');\r\n      Router.push('/'); //내 id값이 들어오면(로그인 시) 메인페이지로 이동한다\r\n    }\r\n  }, [me && me.id]); //비교의 용이함을 위해 me.id(일반값)를 씀, js는 항상 undefined 일 수 있으므로 && (가드)를 해준다\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      if (!term) {\r\n        return setTermError(true);\r\n      }\r\n      dispatch(signUpRequestAction({\r\n        userId: id,\r\n        password,\r\n        nickname: nick,\r\n      }))\r\n    },\r\n    [id, nick, password, passwordCheck, term]\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    e => {\r\n      setPasswordError(e.target.value !== password);\r\n      setPasswordCheck(e.target.value);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const onChangeTerm = useCallback(e => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-id\">아이디</label>\r\n          <br />\r\n          <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-nick\"\r\n            value={nick}\r\n            required\r\n            onChange={onChangeNick}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-pass\">비밀번호</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-pass\"\r\n            type=\"password\"\r\n            value={password}\r\n            required\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-pass-chk\">비밀번호체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-pass-chk\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && (\r\n            <div style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>\r\n            열심히 할 거야?\r\n          </Checkbox>\r\n          {termError && (\r\n            <div style={{ color: \"red\" }}>약관에 동의하셔야 합니다.</div>\r\n          )}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" loading={isSigningUp} htmlType=\"submit\">\r\n            가입하기\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}