{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport PropTypes from \"prop-types\";\nimport withRedux from \"next-redux-wrapper\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport AppLayout from \"../components/AppLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.3/antd.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charSet: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nNodeBird.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // next가 실행해주면서 context를 넣어준다\n            console.log(context);\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return Component.getInitialProps(ctx);\n\n          case 6:\n            pageProps = _context.sent;\n\n          case 7:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar configureStore = function configureStore(initialState, options) {\n  //store를 props로 넘겨주기 위해 고차컴포넌트를 사용해서 확장한다\n  //이 형식은 대부분 이렇게 쓰이므로 외워서 사용하는게 좋을 듯 싶다\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware]; // 다른 미들웨어를 추가하더라도 이 부분만 바뀐다\n\n  var enhancer = process.env.NODE_ENV === \"production\" ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer); //여기에다가 store 커스터마이징\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\pages\\_app.js"],"names":["React","Head","PropTypes","withRedux","Provider","createStore","compose","applyMiddleware","createSagaMiddleware","AppLayout","reducer","rootSaga","NodeBird","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","console","log","ctx","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport PropTypes from \"prop-types\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Head>\r\n        <title>NodeBird</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.3/antd.css\"\r\n        />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          type=\"text/css\"\r\n          charSet=\"UTF-8\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\r\n        />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          type=\"text/css\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\r\n        />\r\n      </Head>\r\n      <AppLayout>\r\n        <Component {...pageProps} />\r\n      </AppLayout>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  store: PropTypes.object.isRequired,\r\n  pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\nNodeBird.getInitialProps = async (context) => { // next가 실행해주면서 context를 넣어준다\r\n  console.log(context);\r\n  const { ctx, Component } = context;\r\n  let pageProps = {};\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  return { pageProps };\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n  //store를 props로 넘겨주기 위해 고차컴포넌트를 사용해서 확장한다\r\n  //이 형식은 대부분 이렇게 쓰이므로 외워서 사용하는게 좋을 듯 싶다\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware]; // 다른 미들웨어를 추가하더라도 이 부분만 바뀐다\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n          applyMiddleware(...middlewares),\r\n          !options.isServer &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n        );\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  //여기에다가 store 커스터마이징\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(NodeBird);\r\n"]},"metadata":{},"sourceType":"module"}