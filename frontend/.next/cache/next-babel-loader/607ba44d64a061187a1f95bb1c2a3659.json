{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar dummyUser = {\n  nickname: \"이정걸\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {}\n};\nexport var initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  //로그인 시도중\n  logInErrorReason: '',\n  //로그인 에러 사유\n  isSigningUp: false,\n  // 회원가입 시도중\n  isSignedUp: false,\n  // 회원가입 성공\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  //팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보 \n\n}; //액션의 이름\n\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var LOAD_FOLLOW_REQUEST = \"LOAD_FOLLOW_REQUEST\";\nexport var LOAD_FOLLOW_SUCCESS = \"LOAD_FOLLOW_SUCCESS\";\nexport var LOAD_FOLLOW_FAILURE = \"LOAD_FOLLOW_FAILURE\";\nexport var FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport var FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport var FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\nexport var UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport var UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport var UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\nexport var REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport var REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport var REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    // 동적 데이터 처리를 위해 함수로 만든다\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\nexport var signUpRequestAction = function signUpRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          loginData: action.data,\n          isLoading: true,\n          logInErrorReason: \"\"\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: null,\n          logInErrorReason: action.error\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: \"\"\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSigningUp","isSignedUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","loginRequestAction","data","type","logoutRequestAction","signUpRequestAction","signUpSuccess","reducer","state","action","loginData","isLoading","error"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n  nickname: \"이정걸\",\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n  signUpData: {}\r\n};\r\n\r\nexport const initialState = {\r\n  isLoggingOut: false, // 로그아웃 시도중\r\n  isLoggingIn: false, //로그인 시도중\r\n  logInErrorReason: '', //로그인 에러 사유\r\n  isSigningUp: false, // 회원가입 시도중\r\n  isSignedUp: false, // 회원가입 성공\r\n  signUpErrorReason: '', // 회원가입 실패 사유\r\n  me: null, // 내 정보\r\n  followingList: [], //팔로잉 리스트\r\n  followerList: [], // 팔로워 리스트\r\n  userInfo: null, // 남의 정보 \r\n};\r\n\r\n//액션의 이름\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\r\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const LOAD_FOLLOW_REQUEST = \"LOAD_FOLLOW_REQUEST\";\r\nexport const LOAD_FOLLOW_SUCCESS = \"LOAD_FOLLOW_SUCCESS\";\r\nexport const LOAD_FOLLOW_FAILURE = \"LOAD_FOLLOW_FAILURE\";\r\n\r\nexport const FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\r\nexport const FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\r\nexport const FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\r\n\r\nexport const UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\r\nexport const UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\r\nexport const UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\r\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\r\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\n\r\nexport const loginRequestAction = data => ({\r\n  // 동적 데이터 처리를 위해 함수로 만든다\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = {\r\n  type: LOG_OUT_REQUEST\r\n};\r\n\r\nexport const signUpRequestAction = data => ({\r\n  type: SIGN_UP_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        loginData: action.data,\r\n        isLoading: true,\r\n        logInErrorReason: \"\"\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        me: action.data,\r\n        isLoading: false\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        me: null,\r\n        logInErrorReason: action.error\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        me: null\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isSignedUp: false,\r\n        signUpErrorReason: \"\"\r\n      };\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isSignedUp: true\r\n      };\r\n    }\r\n    case SIGN_UP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        signUpErrorReason: action.error\r\n      };\r\n    }\r\n    case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_USER_SUCCESS: {\r\n      if(action.me){\r\n        return {\r\n          ...state,\r\n          me: action.data\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        userInfo: action.data\r\n      }\r\n    }\r\n    case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}