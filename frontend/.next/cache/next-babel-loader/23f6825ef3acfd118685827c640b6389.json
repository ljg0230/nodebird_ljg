{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: \"\",\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: \"\",\n  commentAdded: false\n};\nvar dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '이정걸걸'\n  },\n  createdAt: new Date(),\n  content: \"Dummy Comment!\"\n};\nexport var LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\nexport var LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\nexport var LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\nexport var LOAD_HASHTAG_REQUEST = \"LOAD_HASHTAG_REQUEST\";\nexport var LOAD_HASHTAG_SUCCESS = \"LOAD_HASHTAG_SUCCESS\";\nexport var LOAD_HASHTAG_FAILURE = \"LOAD_HASHTAG_FAILURE\";\nexport var LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport var LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport var LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var LOAD_COMMENTS_REQUEST = \"LOAD_COMMENTS_REQUEST\";\nexport var LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\nexport var LOAD_COMMENTS_FAILURE = \"LOAD_COMMENTS_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPLOAD_IMAGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n        });\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter(function (v, i) {\n            return i !== action.index;\n          })\n        });\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: \"\",\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: \"\",\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        var _postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post = state.mainPosts[_postIndex];\n        var _Comments = action.data.comments;\n\n        var _mainPosts = _toConsumableArray(state.mainPosts);\n\n        _mainPosts[_postIndex] = _objectSpread({}, _post, {\n          Comments: _Comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n    case LOAD_HASHTAG_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\이정걸\\web\\react_nodebird\\frontend\\reducers\\post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyComment","id","User","nickname","createdAt","Date","content","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_REQUEST","LOAD_HASHTAG_SUCCESS","LOAD_HASHTAG_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","reducer","state","action","type","data","filter","v","i","index","error","postIndex","findIndex","postId","post","Comments","comment","comments"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  mainPosts: [], // 화면에 보일 포스트들\r\n  imagePaths: [], // 미리보기 이미지 경로\r\n  addPostErrorReason: \"\", // 포스트 업로드 실패 사유\r\n  isAddingPost: false, // 포스트 업로드 중\r\n  postAdded: false, // 포스트 업로드 성공\r\n  isAddingComment: false,\r\n  addCommentErrorReason: \"\",\r\n  commentAdded: false,\r\n};\r\n\r\nconst dummyComment = {\r\n  id: 1,\r\n  User: {\r\n    id: 1,\r\n    nickname: '이정걸걸'\r\n  },\r\n  createdAt: new Date(),\r\n  content: \"Dummy Comment!\"\r\n};\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\r\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\r\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\r\n\r\nexport const LOAD_HASHTAG_REQUEST = \"LOAD_HASHTAG_REQUEST\";\r\nexport const LOAD_HASHTAG_SUCCESS = \"LOAD_HASHTAG_SUCCESS\";\r\nexport const LOAD_HASHTAG_FAILURE = \"LOAD_HASHTAG_FAILURE\";\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\r\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\r\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const LOAD_COMMENTS_REQUEST = \"LOAD_COMMENTS_REQUEST\";\r\nexport const LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\r\nexport const LOAD_COMMENTS_FAILURE = \"LOAD_COMMENTS_FAILURE\";\r\n\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPLOAD_IMAGES_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UPLOAD_IMAGES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        imagePaths: [...state.imagePaths, ...action.data],\r\n      };\r\n    }\r\n    case UPLOAD_IMAGES_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case REMOVE_IMAGE: {\r\n      return {\r\n        ...state,\r\n        imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n      }\r\n    }\r\n    case ADD_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: true,\r\n        addPostErrorReason: \"\",\r\n        postAdded: false\r\n      };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n        postAdded: true\r\n      };\r\n    }\r\n    case ADD_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isAddingPost: false,\r\n        addPostErrorReason: action.error\r\n      };\r\n    }\r\n    case ADD_COMMENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAddingComment: true,\r\n        addCommentErrorReason: \"\",\r\n        commentAdded: false\r\n      };\r\n    }\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex(\r\n        v => v.id === action.data.postId\r\n      );\r\n      const post = state.mainPosts[postIndex];\r\n      const Comments = [...post.Comments, action.data.comment];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n      return {\r\n        ...state,\r\n        isAddingComment: false,\r\n        mainPosts,\r\n        commentAdded: true\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isAddingComment: false,\r\n        addCommentErrorReason: action.error\r\n      };\r\n    }\r\n    case LOAD_COMMENTS_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex(\r\n        v => v.id === action.data.postId\r\n      );\r\n      const post = state.mainPosts[postIndex];\r\n      const Comments = action.data.comments;\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = { ...post, Comments };\r\n      return {\r\n        ...state,\r\n        mainPosts\r\n      };\r\n    }\r\n    case LOAD_MAIN_POSTS_REQUEST:\r\n    case LOAD_HASHTAG_REQUEST:\r\n    case LOAD_USER_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        mainPosts: []\r\n      };\r\n    }\r\n    case LOAD_MAIN_POSTS_SUCCESS:\r\n    case LOAD_HASHTAG_SUCCESS:\r\n    case LOAD_USER_POSTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: action.data\r\n      };\r\n    }\r\n    case LOAD_MAIN_POSTS_FAILURE:\r\n    case LOAD_HASHTAG_FAILURE:\r\n    case LOAD_USER_POSTS_FAILURE: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}